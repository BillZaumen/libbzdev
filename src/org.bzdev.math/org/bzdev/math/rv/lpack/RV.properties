outOfRange = Argument (%g) out of range
intOutOfRange Argument (%d) out of range

tooLarge = Argument (%g) too large
tooSmall = Argument (%g) too small

valAtIndNonNegative = Value %g at index %d must not be negative
valNotNegative = Value %g must not be negative
finalNotNegative = Final value %g must not be negative

meanNotNegative = Mean (%g) cannot be negative
sdevNotNegative = Standard deviation (%g) cannot be negative

# mu, sigma for log-normal constructor
sigmaNotNegative = Sigma (%g) cannot be negative

noClone = Random variable of type %s cannot be cloned

lambdaNotNegative = The argument lambda (%g) must not be negative
lambdaTooLarge  = The argument lambda (%g) is too large for an \
		integer representation

firstArgNull = The first argument was null
secondArgNull = The second argument was null
thirdArgNeg = The third argument was negative
# LocalWords:  outOfRange intOutOfRange tooLarge tooSmall Sdev
# LocalWords:  valAtIndNonNegative valNotNegative finalNotNegative
# LocalWords:  meanNotNegative sdevNotNegative sigmaNotNegative
# LocalWords:  noClone lambdaNotNegative lambdaTooLarge firstArgNull
# LocalWords:  secondArgNull thirdArgNeg
