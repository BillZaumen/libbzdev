object = This parameter can be used directly to clear a key or to \
   clear the object table.  There are a large number of subparameters \
   While all objects have an <CODE>object.type</code> parameter, \
   the remaining subparameters are used for specific types: \
   <UL> \
      <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>ARC_CHORD</CODE>, <CODE>ARC_OPEN</CODE>, or \
         <CODE>ARCH_PIE</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.fill</CODE> - true if the object\'s shape \
	          is filled; false if it is not filled. \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape  \
                  is drawn;  false if it is not drawn.  \
            <LI> <CODE>object.width</CODE> - the width of the full ellipse of \
                 which this object is a partial section. \
            <LI> <CODE>object.height</CODE> - the height of the full \
                 ellipse of which this object is a partial section. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.start</CODE> - the starting angle of the \
                 arc in degrees, measured counterclockwise in units of \
                 degrees. The angle is set for the case in which \
                 the height and width are the same, followed by an \
                 affine transformation that skews the angle if the \
                 width and height differ. \
            <LI> <CODE>object.extent</CODE> - the angular extent in \
                 degrees. The angle for the end point is determined by \
                 adding the extent to the starting angle to \
                 produce the final angle, which is followed \
                 by an affine transformation that skews the \
                 angle if the width and height differ. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	         the object (see below for the	 sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
		 colors for all objects; calling \'remove\' removes \
		 the object-specific color for the given key. In both \
		 cases, the default color will be used. \
            <LI> <CODE>object.fillColor</CODE> - the color used to fill \
                 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	         the object (see below for the sub-parameters). \
                 Calling <CODE>clear</CODE> removes object-specific \
		 stroke for all objects; calling <CODE>remove</CODE> \
                 removes the object-specific stroke for the given \
                 key. In both cases, the default stroke will be used. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the enumeration \
		type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
         </ul> \
         For <CODE>ARC_CHORD</CODE>, the shape includes a \
         line connecting the end points of the arc.  For \
         <CODE>ARC_OPEN</CODE>, only the arc itself is part \
         of the curve, although filling the arc will fill the \
         same area as for the <CODE>ARC_CHORD</CODE> case. \
         For <CODE>ARC_PIE</CODE>, the lines from the center \
         of the ellipse to the end points are included in the \
         shape. \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>CONTROL_POINT</CODE>, the following parameters \
         may be set: \
         <ul> \
            <LI> <CODE>object.x</CODE> - the control point\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the control point\'s Y coordinate. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>CUBIC_CURVE</CODE>, the following parameters \
         may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object is drawn; \
                  false if it is not drawn. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.xcontrol1</CODE> - the X coordinate of \
	    	 the object\'s first control point. \
            <LI> <CODE>object.ycontrol1</CODE> - the Y coordinate of \
	    	 the object\'s first control point. \
            <LI> <CODE>object.xcontrol2</CODE> - the X coordinate of \
	    	 the object\'s \
                 second control point. \
            <LI> <CODE>object.ycontrol2</CODE> - the Y coordinate of the  \
	    	 object\'s second control point. \
            <LI> <CODE>object.xend</CODE> - the X coordinate of the end \
	    	 point. \
            <LI> <CODE>object.yend</CODE> - the Y coordinate of the end \
	    	 point. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	    	 the object (see below for the sub-parameters). calling \
		 <CODE>clear</CODE> removes object-specific colors for \
		 all objects; calling \'remove\' removes the \
		 object-specific color for the given key. In both cases, \
		 the default color will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	    	 the object (see below for the \
                 sub-parameters). calling <CODE>clear</CODE> removes \
                 object-specific stroke for all objects; calling \
                 \'remove\' removes the object-specific stroke for the \
                 given key. In both cases, the default stroke will be \
                 used. \
         </ul> \
      <LI> If the value of <CODE>object.type</CODE> is \
       	 <CODE>ELLIPSE</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	    	  is drawn; false if it is not drawn. \
            <LI> <CODE>object.fill</CODE> - true if the object\'s shape \
	    	 is filled; false if it is not filled. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.width</CODE> - true if the object\'s shape \
	    	 is drawn; false if it is not drawn. \
            <LI> <CODE>object.height</CODE> - the object\'s height. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	    	 the object (see below for the sub-parameters). calling \
		 <CODE>clear</CODE> removes object-specific colors for \
                 all objects; calling \'remove\' removes the \
                 object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.fillColor</CODE> - the color used to fill \
	    	 the object (see below for the sub-parameters). Calling \
		 <CODE>clear</CODE> removes object-specific colors for \
                 all objects; calling \'remove\' removes the \
                 object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
 \
	    	 the object (see below for the sub-parameters). Calling \
		 <CODE>clear</CODE> removes object-specific stroke for \
                 all objects; calling \'remove\' removes the \
                 object-specific stroke for the given key. In both \
                 cases, the default stroke will be used. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the enumeration \
		type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
           <CODE>IMAGE</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>imageURL</CODE> - the URL at which the image can \
                 be found.  This may be a URL whose scheme is \
                 either <CODE>sresource</CODE> or <CODE>resource</CODE>. \
            <LI> <CODE>object.imageAngle</CODE> - the angle in degrees \
	         by which the image will be rotated in the counter clockwise \
                 direction about the reference point. \
            <LI> <CODE>object.imageScaleX</CODE> - the scaling factor, in \
                 the X direction of the image, by which to change \
                 the size of the image. When the value is 1.0, an image \
		 pixel\'s size in the X direction will be one unit in \
		 either graph coordinate space (when \
		 <CODE>object.imageInGCS</CODE> is <CODE>true</CODE>) or \
		 user space (when <CODE>object.imageInGCS</CODE> is \
		 <CODE>false</CODE>). \
            <LI> <CODE>object.imageScaleY</CODE> - the scaling factor, in \
                 the Y direction of the image, by which to change \
                 the size of the image. When the value is 1.0, an image \
		 pixel\'s size in the Y direction will be one unit in \
		 either graph coordinate space (when \
		 <CODE>object.imageInGCS</CODE> is <CODE>true</CODE>) or \
		 user space when <CODE>object.imageInGCS</CODE> is \
		 <CODE>false</CODE>. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the enumeration \
		type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
             <LI> <CODE>object.imageFlipX</CODE> - the image should be \
                  reflected in the X direction (about the Y axis). \
                  The image will be in the same bounding box \
                  regardless of the value of this parameter. The \
                  default is <CODE>false</CODE>. \
             <LI> <CODE>object.imageFlipY</CODE> - the image should be \
                  reflected in the Y direction (about the X axis). \
                  The image will be in the same bounding box \
                  regardless of the value of this parameter. The \
                  default is <CODE>false</CODE>. \
             <LI> <CODE>object.imageInGCS</CODE> - true if a pixel takes up \
                  one unit in graph coordinate space; false if a \
                  pixel takes up one unit in user space.  The default \
                  is <CODE>true</CODE>. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is <CODE>LINE</CODE>, the \
         following parameters may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	         is drawn; false if it is not drawn. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.xend</CODE> - the X coordinate of the end point. \
            <LI> <CODE>object.yend</CODE> - the Y coordinate of the end point. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	         the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific colors \
		 for all objects; calling \'remove\' removes the \
		 object-specific color  for the given key. In both cases, \
		 the default color  will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	         the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific stroke \
		 for all objects; Calling \'remove\' removes the \
		 object-specific stroke for the given key. In both cases, \
		 the default stroke will be used. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
            <CODE>MOVE_TO</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
            <CODE>PATH_START</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.windingRule</CODE>  The value is an enumeration \
                 whose type is \
                 <JDOC>org.bzdev.geom.SplinePathBuilder.WindingRule</JDOC>, \
                 with enumeration constants \
                 <ul> \
                   <LI> <CODE>WIND_EVEN_ODD</CODE>, which \
                   specifies that a point lies inside the \
                   path if a ray drawn in any direction from \
                   that point to infinity is crossed by path \
                   segments an odd number of times. \
                   <LI> <CODE>WIND_NON_ZERO</CODE>, which \
                   specifies that a point lies inside the \
                   path if a ray drawn in any direction from \
                   that point to infinity is crossed by path \
                   segments a different number of times in \
                   the counter-clockwise direction than the \
                   clockwise direction. \
                 </ul> \
                 (the description for these enumeration constants \
                  was copied from the Java documentation for \
                 {@link java.awt.geom.PathIterator}, which defines \
                 integer-valued constants with the same name). \
         </ul> \
         The next element must have a type of either \
         <CODE>MOVE_TO</CODE> or <CODE>MOVE_TO_NEXT</CODE>, \
         followed by a sequence of objects ending with an \
         object whose type is <code>PATH_END</code>. \
       <LI> If the value of <CODE>object.type</CODE> is \
            <CODE>PATH_END</CODE>, the following parameters may be set:\
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	         is drawn; false if it is not drawn. \
            <LI> <CODE>object.fill</CODE> - true if the object\'s shape \
	         is filled; false if it is not filled. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	         the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific colors \
		 for all objects; calling \'remove\' removes the \
                 object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.fillColor</CODE> - the color used to fill  \
	         the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
 \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw  \
	         the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 stroke for all objects; calling \'remove\' removes \
                 the object-specific stroke for the given key. In both \
                 cases, the default stroke will be used. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \ \
            <CODE>QUAD_CURVE</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	    	 is drawn; false if it is not drawn. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.xcontrol</CODE> - the X coordinate of the \
	    	 control point. \
            <LI> <CODE>object.ycontrol</CODE> - the Y coordinate of the \
	         control point. \
            <LI> <CODE>object.xend</CODE> - the X coordinate of the \
	    	 end point. \
            <LI> <CODE>object.yend</CODE> - the X coordinate of the \
	    	 end point. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
 \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 stroke for all objects; calling \'remove\' removes \
                 the object-specific stroke for the given key. In both \
                 cases, the default stroke will be used. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the enumeration \
		type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
       	    <CODE>RECTANGLE</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	    	 is drawn; false if it is not drawn. \
            <LI> <CODE>object.fill</CODE> - true if the object\'s shape \
	    	 is filled; false if it is not filled. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.width</CODE> - true if the object\'s shape \
	    	 is drawn; false if it is not drawn. \
            <LI> <CODE>object.height</CODE> - the object\'s height. \
            <LI> <CODE>object.drawColor</CODE> - the color used to \
	    	 draw the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.fillColor</CODE> - the color used to fill \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 stroke for all objects; calling \'remove\' removes \
                 the object-specific stroke for the given key. In both \
                 cases, the default stroke will be used. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the \
		enumeration type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>ROUND_RECTANGLE</CODE>, the following \
         parameters may be set: \
         <ul> \
            <LI> <CODE>object.draw</CODE> - true if the object\'s shape \
	    	 is drawn; false if it is not drawn. \
            <LI> <CODE>object.fill</CODE> - true if the object\'s shape \
	    	 is filled; false if it is not filled. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.width</CODE> - the object\'s width \
            <LI> <CODE>object.height</CODE> - the object\'s height. \
            <LI> <CODE>object.arcwidth</CODE> - the width of the arcs \
	    	 used to round off the corners of the rectangle. \
            <LI> <CODE>object.archeight</CODE> - the height of the arcs \
	    	 used to round off the corners of the rectangle. \
            <LI> <CODE>object.drawColor</CODE> - the color used to draw \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.fillColor</CODE> - the color used to fill \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 colors for all objects; calling \'remove\' removes \
                 the object-specific color for the given key. In both \
                 cases, the default color will be used. \
            <LI> <CODE>object.stroke</CODE> - the stroke used to draw \
	    	 the object (see below for the sub-parameters). \
		 Calling <CODE>clear</CODE> removes object-specific \
                 stroke for all objects; calling \'remove\' removes \
                 the object-specific stroke for the given key. In both \
                 cases, the default stroke will be used. \
            <LI> <CODE>object.refPoint</CODE> - the object\'s reference \
                point, the point corresponding to (x,y), with \
                a value that is an enumeration constant for the enumeration \
		type <JDOC>org.bzdev.geom.RefPointName</JDOC>: \
		<UL> \
		   <LI><CODE>UPPER_LEFT</CODE>. The point (x,y) corresponds \
		   to the upper left corner of the object\' bounding box. \
                   <LI><CODE>UPPER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the upper edge of the object\'s \
		   bounding box. \
                   <LI><CODE>UPPER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the upper right corner of the object\' bounding box. \
                   <LI><CODE>CENTER_LEFT</CODE>. The point (x,y) corresponds \
		   to the center of the left edge of the object\'s bounding \
		   box. \
                   <LI><CODE>CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the object\' bounding box. \
                   <LI><CODE>CENTER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the center of the right edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_LEFT</CODE>. The point (x,y) corresponds \
		   to the lower left corner of the object\'s bounding box. \
                   <LI><CODE>LOWER_CENTER</CODE>. The point (x,y) corresponds \
		   to the center of the lower edge of the object\'s \
		   bounding box. \
                   <LI><CODE>LOWER_RIGHT</CODE>. The point (x,y) corresponds \
		   to the lower right corner of the object\'s bounding box. \
		</UL> \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
       	    <CODE>SEG_CLOSE</CODE>, no additional parameters may be set. \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>SPLINE_POINT</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.x</CODE> - the spline point\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the spline point\'s Y coordinate. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>SPLINE_FUNCTION</CODE>, the following \
         parameters may be set: \
         <ul> \
            <LI> <CODE>object.xf</CODE> - an animation object that is an \
                 instance of SimFunction, giving the x coordinate \
                 of a point as a function of an argument. \
            <LI> <CODE>object.yf</CODE> - an animation object that is an \
                 instance of SimFunction, giving the y coordinate \
                 of a point as a function of an argument. \
            <LI> <CODE>object.t1</CODE> - the starting value of the \
	    	 argument for the functions provided by the \
                 <CODE>object.xf</CODE> and <CODE>object.yf</CODE> \
                 parameters. \
            <LI> <CODE>object.t1</CODE> - the starting value of the \
	    	 argument for the functions provided by the \
                 <CODE>object.xf</CODE> and <CODE>object.yf</CODE> \
                 parameters. \
            <LI> <CODE>object.n</CODE> - the number of points in the \
	    	 interval (t1, t2] at which the functions will be \
                 evaluated.  The function will also be evaluated at \
                 t1. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
       	    <CODE>SEG_END</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
         </ul> \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>SEG_END_PREV</CODE>, no parameters are set, \
         but the preceding key must have set <CODE>object.type</CODE> to \
         either <CODE>SPLINE_POINT</CODE> or \
         <CODE>SPLINE_FUNCTION</CODE>. \
       <LI> If the value of <CODE>object.type</CODE> is \
         <CODE>SEG_END_NEXT</CODE>, no parameters are set, but the next \
	 key must set <CODE>object.type</CODE> to be either \
	 <CODE>SPLINE_POINT</CODE> or <CODE>SPLINE_FUNCTION</CODE>. \
       <LI> If the value of <CODE>object.type</CODE> is \
       	    <CODE>TEXT</CODE>, the following parameters may be set: \
         <ul> \
            <LI> <CODE>object.text</CODE> - the text to display. \
            <LI> <CODE>object.x</CODE> - the object\'s X coordinate. \
            <LI> <CODE>object.y</CODE> - the object\'s Y coordinate. \
            <LI> <CODE>object.fontParms</CODE> - parameters for the \
            current object determining how fonts should be \
            displayed.  The allowed parameters are: \
                 <ul> \
                    <LI> <CODE>object.fontParms.name</CODE> - the name \
                          of a font or font family. \
                    <LI> <CODE>object.fontParms.justification</CODE> - \
                         the font justification \
                         (<CODE>LEFT</CODE>, \
                         <CODE>RIGHT</CODE>, or \
                         <CODE>CENTER</CODE>). \
                    <LI> <CODE>object.fontParms.baselinePosition</CODE> \
                          - the position of the line used to \
                          position a font up or down. Values \
                          may be <CODE>TOP</CODE>, \
                          <CODE>CENTER</CODE>, \
                          <CODE>BASE</CODE>, or \
                          <CODE>BOTTOM</CODE>. \
                    <LI> <CODE>object.fontParms.angle</CODE> - the angle \
                         in degrees of the font from horizontal, \
                         measured counterclockwise in user space. \
                    <LI> <CODE>object.fontParms.size</CODE> - the size of \
                         the font (a positive integer) \
                    <LI> <CODE>object.fontParms.style</CODE> the style \
                         of the font (<CODE>PLAIN</CODE>, \
                         <CODE>ITALIC</CODE>, \
                         <CODE>BOLD</CODE>, or \
                         <CODE>BOLD_ITALIC</CODE>). \
                    <LI> <CODE>object.fontParms.color.red</CODE> - the \
                          red intensity of the font color, an integer in \
                          the range [0, 255]. \
                    <LI> <CODE>object.fontParms.color.green</CODE> - the \
                          green intensity of the font color, an integer in \
                          the range [0, 255]. \
                    <LI> <CODE>object.fontParms.color.blue</CODE> - the \
                          blue intensity of the font color, an integer in \
                          the range [0, 255]. \
                    <LI> <CODE>object.fontParms.color.alpha</CODE> - the \
                          alpha intensity of the font color, an integer in \
                          the range [0, 255] with 0 indicating \
                          transparent and 255 indication opaque. \
                 </UL> \
             calling <CODE>clear</CODE> with \
	     <CODE>object.fontParms</CODE> as its argument removes the \
	     object.fontParms entries for every key; calling remove \
	     arguments <CODE>object.fontParms</CODE> and a key removes \
	     the entry for that specific key. \
         </UL> \
   </UL>

object.imageScaleX = When the value is 1.0, an image \
		 pixel\'s size in the X direction will be one unit in \
		 either graph coordinate space (when \
		 <CODE>object.imageInGCS</CODE> is <CODE>true</CODE>) or \
		 user space (when <CODE>object.imageInGCS</CODE> is \
		 <CODE>false</CODE>). To compute the value for the case \
		 where <CODE>object.imageInGCS</CODE> is <CODE>true</CODE> \
		 and where the X and Y scale factors are the same, \
		 determine the distance between two points on the \
		 image in graph-coordinate-space units and divide that \
		 distance by the corresponding distance in \
		 image-space units.

object.imageScaleY = When the value is 1.0, an image \
		 pixel\'s size in the Y direction will be one unit in \
		 either graph coordinate space (when \
		 <CODE>object.imageInGCS</CODE> is <CODE>true</CODE>) or \
		 user space (when <CODE>object.imageInGCS</CODE> is \
		 <CODE>false</CODE>). To compute the value for the case \
		 where <CODE>object.imageInGCS</CODE> is <CODE>true</CODE> \
		 and where the X and Y scale factors are the same, \
		 determine the distance between two points on the \
		 image in graph-coordinate-space units and divide that \
		 distance by the corresponding distance in \
		 image-space units.

# object.drawColor = Object-specific drawing color to override the default

# object.fillColor = Object-specific fill color to override the default

# object.fontParms = Object-specific font parameters to override the default

# object.stroke = Object-specific stroke parameters to override the default

# drawColor = Drawing color to use as a default

# fillColor = Fill color to use as a default

# fontParms = Font parameters to use as a default

# stroke = Stoke parameters to use as a default

#  LocalWords:  subparameters ul imageURL sresource SEG SimFunction
#  LocalWords:  PREV fontParms drawColor fillColor affine JDOC
#  LocalWords:  imageScaleX imageScaleY
