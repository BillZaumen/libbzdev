cpoint = This parameter can be used directly to remove all entries \
    associated with a key or to clear all the keys. \
    <P> \
    The table consists of a sequence of descriptors, each with \
    a type. Specific subparameters go with each of these types, \
    and only specific sequences are allowed: \
    <UL> \
      <li> The first point\'s type is either \
          <CODE>MOVE_TO</CODE> or \
          <CODE>MOVE_TO_NEXT</CODE>. Only a \
          single point of this type is allowed. \
       <li> A segment that contains only \
            <CODE>CONTROL</CODE> points (0, 1, or 2) after the end \
	    of the previous segment must \
            end with a <CODE>SEG_END</CODE>, <CODE>SEG_END_NEXT</CODE>, \
	    or <CODE>CLOSE</CODE> point. These \
            represent straight lines, quadratic \
            B&eacute;zier curves, and cubic B&eacute;zier \
            curves respectively. The control points must \
            be preceded by a point whose type is \
            <CODE>MOVETO</CODE>, <CODE>SEG_END</CODE> or \
            <CODE>SEG_END_PREV</CODE>. \
       <li> An open spline segment starts with either the \
            end of another segment or a point whose type \
            is either <CODE>MOVE_TO</CODE> or \
            <CODE>MOVE_TO_NEXT</CODE>. An open spline \
            ends with a point whose type is \
            <CODE>SEG_END</CODE> or \
            <CODE>SEG_END_PREV</CODE>, and contains \
            points (at least one) whose types are either \
            <CODE>SPLINE</CODE> or \
            <CODE>SPLINE_FUNCTION</CODE>. \
       <li> A closed subpath is indicated by a point \
            whose type is <CODE>CLOSE</CODE>. A \
            <CODE>BasicSplinePathBuilder</CODE> allows at \
            most one of these points, and no point may \
            follow a point whose type is \
            <CODE>CLOSE</CODE>.  If this point is \
            preceded by a point of type \
            <CODE>SEG_END</CODE> or \
            <CODE>SEG_END_PREV</CODE>, a straight line \
            (unless the line will have a length of zero) \
            will connect the previous point to the point \
            specified by the last point whose type is \
            <CODE>MOVE_TO</CODE> or \
            <CODE>MOVE_TO_NEXT</CODE>. If all the points \
	    after the initial point are a sequence of \
            <CODE>SPLINE</CODE> or \
            <CODE>SPLINE_FUNCTION</CODE> points and that \
	    sequence is terminated by a <CODE>CLOSE</CODE> \
	    point, the point immediately before the sequence must \
            have a type of <CODE>MOVE_TO</CODE> or \
            <CODE>MOVE_TO_NEXT</CODE>, and a closed \
            spline will be generated consisting of this \
            initial point and the spline points. \
    </UL>

windingRule = This parameter\'s value is an enumeration constant defined \
    by the enumeration type \
    <JDOC>org.bzdev.geom.SplinePathBuilder.WindingRule</JDOC>: \
    <UL> \
       <LI><CODE>WIND_EVEN_ODD</CODE>. With this rule, a point is assumed \
       to be in the interior of a path if a line drawn in any direction \
       from that point to infinity is crossed by path segments an odd \
       number of times. \
       <LI><CODE>WIND_NON_ZERO</CODE>. With this rule, a point is assumed \
       to be in the interior of a path if a line drawn in any direction \
       from that point to infinity is crossed by path segments a different \
       number of times in the counter-clockwise direction than the \
       clockwise direction. \
    </ul> \
    These winding rules correspond to the <CODE>int</CODE> constants \
    with the same names defined by <JDOC>java.awt.geom.Path2D</JDOC>.

color = Clearing this parameter restores the default. Its subparameters \
      determine the color.

stroke = Clearing this parameter restores the default. Its subparameters \
       determine the stroke\'s properties.

showSegments = This parameter by default has the value <CODE>false</CODE>. \
	     Setting it to  true is useful in some cases because the \
	     end points of segments occur at integral values of the \
	     path parameter.  The coordinates of these end points are \
	     listed in order by the array used to configure the \
	     <CODE>cpoint</CODE> parameters.

radius = The value is expressed in user-space units, with a default value \
       of 5.0. If a path is drawn with abnormally thick lines, a \
       larger radius may be needed. This parameter is used in conjunction \
       with the <CODE>showSegments</CODE> parameter. It\'s primary use \
       is for debugging or testing.

#  LocalWords:  cpoint subparameters li SEG eacute zier MOVETO PREV
#  LocalWords:  subpath BasicSplinePathBUilder windingRule ul
