path = This parameter\'s value provides the path an object will follow. \
     To indicate that no path is to be used, set this parameter to \
     <CODE>amimation.nullPath()</CODE>, where <CODE>animation</CODE> \
     is the instance of <JDOC>org.bzdev.anim2d.Animation2D</JDOC> \
     associated with this factory.  The path is a parametrized path \
     with the path parameter usually being denoted by the variable u.

u0 = This parameter\'s value is the initial value of the path\'s path \
   parameter.

t0 = This parameter\'s value is the time to wait from the time for \
   this timeline entry (the value of the parameter \
   <CODE>timeline.time</CODE>) before motion along a path starts.

velocity = This parameter\'s value is the velocity of an object \
	 (unit distance per second) while the object has a path.

acceleration = This parameter\'s value is the acceleration of an \
     object (unit distance per second squared) while the object has a \
     path.

angleRelative = When this parameter\'s value is true, the path angle \
    is assumed to be the angle relative to the path (i.e., measured \
    with respect to a tangent vector for the path).  When this \
    parameter\'s value is false, the angle is measured relative to \
    the X axis in graph coordinate space.

pathAngle = This parameter provides the angle for an object in \
    units of degrees. The interpretation of the angle is set by the \
    value of <CODE>timeline.angleRelative</CODE>.

angularVelocity = This parameter\'s value provides the angular velocity \
    in degrees/second while the object has a path.

angularAcceleration = This parameter\'s value provides the angular \
    acceleration in degrees per second squared while the object has a \
    path.

distanceFunction = This parameter provides a function that determines \
    the distance along the path as a function of time. To remove a \
    distance function, set it to <CODE>animation.nullFunction()</CODE> \
    where <CODE>animation</CODE> is the animation associated with this \
    factory. The argument for this function is the time measured from \
    the time set by the value of the parameter <CODE>timeline.time0</CODE>. \
    When a distance function is provided, the parameters providing a \
    velocity and acceleration are ignored, and the object\'s velocity and \
    position are updated based on the derivatives of the function \
    (if not provided, a value is set to Double.NaN).

angleFunction = the angle as a function of time while the object has a \
    path To remove an angle function, set it to \
    <CODE>animation.nullFunction()</CODE> where <CODE>animation</CODE> \
    is the animation associated with this factory. The argument for \
    this function is the time measured from the time set by the value \
    of the parameter <CODE>timeline.time0</CODE>.  When an angle \
    function is provided, the parameters providing a angular velocity \
    and acceleration are ignored, and the object\'s angular velocity \
    and position are updated based on the derivatives of the function \
    (if not provided, a value is set to Double.NaN).

#  LocalWords:  timeline angleRelative pathAngle angularVelocity NaN
#  LocalWords:  angularAcceleration distanceFunction angleFunction
