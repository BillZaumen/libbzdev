cannotWriteImageType = Cannot write image type "%s" to a file
cannotWriteImageTypeOS = Cannot write image type "%s" to an output stream
argOutOfRange1 = Argument %g \\u2209 (-1.0, 1.0)

tagWasTriangle = Tag must not be an instance of Model3D.Triangle
zeroWidthEdge = Zero-width edge
identicalEndPoints = End points are identical
identicalEndPointsTag = End points are identical (tag = "%s")
parmstackEmpty = Model3D parameter stack empty
addToSelf = Cannot add a model to itself

badCase = A case in switch state occurred that should not be possible

argsOutOfRange = Argument(s) out of range (%s)

setSTLBaseErr = Offset %g for setSTLBase must be positive
setUnitScaleX3D = Argument %g for setUnitScaleX3D must be positive

tooManyTriangles = Too many triangles
idTooLong = ID string too long
illegalIdChars = ID string must contain non-zero, 7-bit ASCII characters

illegalMag = Illegal magnification (%g \\u2264 0.0)
noModel = Model not set

nullOutputStream = The output stream was null

popError = A pop method was called without a matching push method

illegalColorFactor = Illegal color factor (%g < 0.0)
badPath = An edge\'s polyline\'s path must start with PathIterator.SEG_MOVETO

negativeLimit = Limit out of range (%g < 0.0)

hollowComponent = Component %d has an inward-pointing surface

triangle = Tried to re-add triangle to list \
	 (%g,%g,%g)---(%g,%g,%g)---(%g,%g,%g)

patch = Tried to re-add patch to list \
	 (%g,%g,%g)---(%g,%g,%g)---(%g,%g,%g)---(%g,%g,%g)

NaN = An argument had the value Double.NaN (Not a Number)

linearVertices = Vertices of a triangle are located along a straight \
	       line (%g,%g,%g)---(%g,%g,%g)---(%g.%g,%g)

insideOut = surface for Component %d is inverted\n

e1 = The first edge of a triangle was duplicated: \n%s
e2 = The second edge of a triangle was duplicated: \n%s
e3 = The third edge of a triangle was duplicated: \n%s

notOriented = <html>Attempted to add an element<br>\
	     from a 3D shape that is not oriented</html>

wrongGetSegmentType: Attempted to add a patch/triangle of type %d

notWellFormed = The cubic portion of the model is not well formed
ZLE = Extra zero-length edge for entry %d, at edge %d (check tessellation level)
ZLECV = Extra zero-length  edge for cubic-edge entry %d

ulpFactor = The ULP factor is less than 2: %g
ulpState = The method setULPFactor was called after objects were added

# SteppedGrid errors
nullArgument =  An argument was null
heightOrder = The fourth argument (%g) to the SteppedGrid constructor \
	    must be larger than the fifth argument (%g)
twoHeights = The method addComponent was called with two height arguments \
	   instead of one
oneHeight = The method addComponent was called with one height argument \
	   instead of two
isUpperShouldBe = Third argument to getZ or getZs should be \'%s\'
arg1Range = The first argument %d is out of range
arg2Range = The second argument %d is out of range
notFilled = The component at indices (%d, %d) is empty
done = The method addsComplete() has already been called
notDone = The method addsComplete() has not yet been called
indicesRange = First two arguments (%d, %d) out of range
topBottom = At (%d, %d), top %g not above bottom %g
SGILG = Illformed half component, corner = %d, (i,j) = (%d,%d)
SGILGCount = Multiple (%d) half-component corner choices, (i,j) = (%d,%d)
offGrid = Coordinates not on grid: (%g, %g)

lineIsVertical = Line is vertical?
noComponentsSet = No components were set
noHeight = No height or no horizontal line from (%1$g, %2$g) to (%3$g, %4$g)

# SteppedGrid.Builder errors
zBaseOrder = The upper Z value %1$g is not larger than the lower Z value %2$g
requireLT = The first argument %1$g must be less than the second argument %2$g
argOffGrid = The argument %g is not on the grid
argOffGrid2 = The first two arguments (%1$g, %2$g) are not a point on the grid
lengthTooLongX = There are not %1$d elements left of (%2$g, %3$g)
lengthTooLongY = There are not %1$d elements above (%2$g, %3$g)
halfAdded = A half rectangle was previously added
notUpper = The 6th argument should not have a value of %b
closedGrid = There is both a lower and upper grid

nullGraph = The graph argument was null
graphDims = A graph\'s size must be at least 200\u00D7200: found %d\u00D7%d
nullNormal = The normal vector was null


# The following two properties are used for printing error messages to an
# Appendable, hence the colon at their end.  A newline is added by the
# class library.
notClosedManifold = 3D model is not a closed manifold:
notEmbedded = 3D model\'s surface is not embedded in a three-dimensional space:

# LocalWords:  cannotWriteImageType cannotWriteImageTypeOS addToSelf
# LocalWords:  argOutOfRange tagWasTriangle zeroWidthEdge badCase SEG
# LocalWords:  identicalEndPoints identicalEndPointsTag setSTLBaseErr
# LocalWords:  parmstackEmpty argsOutOfRange setSTLBase setUnitScaleX
# LocalWords:  tooManyTriangles idTooLong illegalIdChars illegalMag
# LocalWords:  noModel nullOutputStream popError illegalColorFactor
# LocalWords:  badPath polyline PathIterator MOVETO negativeLimit NaN
# LocalWords:  hollowComponent linearVertices insideOut notOriented
# LocalWords:  html br wrongGetSegmentType notWellFormed ZLE getZ arg
# LocalWords:  SteppedGrid nullArgument heightOrder twoHeights getZs
# LocalWords:  addComponent oneHeight isUpperShouldBe notFilled SGILG
# LocalWords:  addsComplete notDone indicesRange topBottom Illformed
# LocalWords:  SGILGCount offGrid lineIsVertical noComponentsSet th
# LocalWords:  noHeight zBaseOrder requireLT argOffGrid halfAdded
# LocalWords:  lengthTooLongX lengthTooLongY notUpper closedGrid
# LocalWords:  Appendable notClosedManifold notEmbedded ZLECV
