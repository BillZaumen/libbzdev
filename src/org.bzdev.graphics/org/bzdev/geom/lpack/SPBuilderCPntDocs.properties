# The type entry assumes the property bundle will be used with
# a compound parameter whose name's first component is "cpoint"
#
type = The value of this parameter is an enumeration constant \
         defined by the enumeration type \
         <JDOC>org.bzdev.geom.SplinePathBuilder.CPointType</JDOC>: \
         <ul> \
            <li> <CODE>MOVE_TO</CODE> - Move to point. The entry \
                 must include a <CODE>cpoint.x</CODE> and a \
		 <CODE>cpoint.y</CODE> parameter. \
            <li> <CODE>MOVE_TO_NEXT</CODE> - Move to a point \
                 whose coordinates are given by the next entry, \
                 which must be a SPLINE or SPLINE_FUNCTION. If \
                 it is a SPLINE_FUNCTION, the value of the \
                 function at <CODE>cpoint.t1</CODE> (provided by the \
		 SPLINE_FUNCTION entry) will be used to compute the \
		 x and y coordinates of this point. \
            <li> <CODE>CONTROL</CODE> - A control point for a \
                 cubic or quadratic curve. Both the <CODE>cpoint.x</CODE> \
		 and <CODE>cpoint.y</CODE> \
                 parameters must be provided.  At most 2 \
                 CONTROL points may appear in a row, and this \
                 subsequence must be terminated by a SEG_END, SEG_END_NEXT, \
		 or CLOSE.\
            <li> <CODE>SPLINE</CODE> - A point along a \
                 spline. Both the <CODE>cpoint.x</CODE> and \
		 <CODE>cpoint.y</CODE> coordinates must be \
                 provided. \
            <li> <CODE>SPLINE_FUNCTION</CODE> - Functions are \
                 used to compute a sequence of spline points. \
                 The parameter <CODE>cpoint.xf</CODE>, \
		 <CODE>cpoint.yf</CODE>, <CODE>cpoint.t1</CODE>, \
		 <CODE>cpoint.t2</CODE>, and <CODE>cpoint.n</CODE> must be \
                 provided. \
            <li> <CODE>SEG_END</CODE> - This represents the \
                 final point in a straight line, quadratic \
                 curve, cubic curve, or spline.  Both  <CODE>cpoint.x</CODE> \
		  and <CODE>cpoint.y</CODE> parameters must be provided. \
            <li> <CODE>SEG_END_PREV</CODE> - This indicates that the \
                 final point in a spline is the previous entry, \
                 which must have a type of SPLINE or \
                 SPLINE_FUNCTION.  For the SPLINE_FUNCTION case, the value of\
                 <CODE>cpoint.t2</CODE> for the SPLINE_FUNCTION entry \
		 will be used to compute the  x an y coordinates \
                 coordinates of this point. \
	    <li> <CODE>SEG_END_NEXT</CODE> - This indicates that the \
                 initial point in a spline is the start of the spline. \
		 this initial point have a type of SPLINE or \
                 SPLINE_FUNCTION.  For the SPLINE_FUNCTION case, the value of \
                 <CODE>cpoint.t1</CODE> for the SPLINE_FUNCTION entry \
		 will be used to compute the  x an y coordinates \
                 coordinates of this staring point, which also ends the \
		 previous segment  If the point before a \
		 <CODE>SEG_END_NEXT</CODE> point is a <CODE>SEG_END</CODE> \
		 point or a <CODE>SEG_END</CODE> or <CODE>MOVE_TO</CODE> \
		 point, the <CODE>SEG_END_NEXT</CODE> will terminate a \
		 straight line segment at the coordinates of the next \
		 point.  If the point before the <CODE>SEG_END_NEXT</CODE> \
		 point is a <CODE>SPLINE_FUNCTION</CODE> or \
		 <CODE>SPLINE</CODE> point, the previous spline will terminate \
		 at the coordinates of the next point and the following \
		 spline will start at that point\'s coordinates. \
            <li> <CODE>CLOSE</CODE> - This indicates that the \
                 curve is closed.  If the curve is a single \
                 spline, the spline will be a closed, smooth \
                 curve.  Otherwise a line, if necessary, will be \
                 drawn from the current position to the last \
                 MOVE_TO coordinates. \
         </ul>

x = This parameter is used when the type parameter has the value \
   MOVE_TO, CONTROL, SPLINE, and SEG_END

y = This parameter is used when the type parameter has the value \
   MOVE_TO, CONTROL, SPLINE, and SEG_END)

xf = The parameter is an object implementing the NamedFunctionOps  \
   interface, and returns a value in graph coordinate space units. \
   The argument to the function is a path parameter. Such objects include \
   <JDOC>org.bzdev.devqsim.SimFunction</JDOC>.

yf = The parameter is an object implementing the NamedFunctionOps \
   interface, and returns a value in graph coordinate space units. \
   The argument to the function is a path parameter.  Such objects include \
   <JDOC>org.bzdev.devqsim.SimFunction</JDOC>.

t1 = The value of this parameter is an arbitrary real number. The  \
   arguments to the functions provided by the xf and yf parameters \
   will vary  from the value of the parameter t1 to the value of the \
   parameter t2. \

t2 = The value of this parameter is an arbitrary real number. The \
   arguments to the functions provided by the xf and yf parameters \
   will vary  from the value of the parameter t1 to the value of the \
   parameter t2.

n =  The value of this parameter is an integer giving the number \
  of segments between the values at which the functions provided  \
  by the parameters xf and yf are evaluated. The number of segments \
  is one less than the number of points.

#  LocalWords:  ul li subsequence SEG xf yf PREV NamedFunctionOps
#  LocalWords:  cpoint JDOC
