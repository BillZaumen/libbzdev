object = This parameter\'s values is an object representing the \
        function and its derivatives.  The object may be \
        <ul> \
          <li> An instance of RealValuedFunction. the value is \
               used directly. \
          <li> An instance of RealValuedFunctOps. the value is \
	       used to construct an instance of RealValuedFunction, \
               which is then used directly. \
          <li> A String. The string will be evaluated as a script, \
               and must produce a scripting-language object with \
               methods named "valueAt", "derivAt", and \
               "secondDerivAt".  These methods provide the value of \
               the function, the value of its derivative, and the \
               value of its second derivative respectively. \
          <li> A scripting-language object with methods named \
               "valueAt", "derivAt", and "secondDerivAt". These \
               methods provide the value of the function, the value \
               of its derivative, and the value of its second \
               derivative respectively. These \
               methods provide the value of the function and the \
               values of its first and second derivatives. \
	       If any are missing, the corresponding operation is not \
	       supported. \
        </ul> \
        All the methods and functions return a double-precision number \
        and take a single double-precision number as the only argument. \
        If <code>null</code>, the <code>fname</code>, <code>fpName</code>, \
	and/or <code>fppName</code> parameters must be provided. \
	<P> \
	While the type of the value is listed as <code>String</code>, \
	an additional overridden <code>set</code>method allows the type \
        to be an arbitrary object to handle some of the values described \
	above.

fName = This parameter provides the name of the scripting-language \
      function with one real-valued \
      argument, returning a real number providing \
      the values of the function. It should not be provided if the \
      <code>object</code> parameter is provided.

fpName = This parameter provides the name of the scripting-language \
      function with one real-valued \
      argument, returning a real number providing \
      the values of the function\'s first derivative. It should not be \
      provided if the  <code>object</code> parameter is provided.

fppName = This parameter provides the name of the scripting-language \
      function with one real-valued \
      argument, returning a real number providing \
      the value of the function\'s second derivative. It should not be \
      provided if the  <code>object</code> parameter is provided.

#  LocalWords:  ul li RealValuedFunction valueAt derivAt fname fpName
#  LocalWords:  secondDerivAt fppName fName
